import React from 'react';
import { Container,Row, Col } from 'react-bootstrap';
import './Blog.css'

const Blog = () => {
    return (
        <div>
            <h3>blog page</h3>
                <Container className='blog-container'>
                <Row>
                    <Col>
                    <h4>1. Difference between Javascript and node.js</h4>
                    <h5>- Javascript:</h5>
                    <p>জাভাস্ক্রিপ্ট একটি স্ক্রিপ্টিং প্রোগ্রামিং  ভাষা। জাভাস্ক্রিপ্ট  এর সংক্ষিপ্ত রূপ হলো JS । এটা বলা যেতে পারে যে জাভাস্ক্রিপ্ট ECMA স্ক্রিপ্টের আপডেট সংস্করণ।  জাভাস্ক্রিপ্ট একটি উচ্চ-স্তরের প্রোগ্রামিং ভাষা। জাভাস্ক্রিপ্ট কে ওয়েবসাইট এর প্রাণ বলা হয়। জাভাস্ক্রিপ্ট শুধুমাত্র ব্রাউজারে চালানো যেতে পারে।এটি মূলত ক্লায়েন্ট-সাইডে ব্যবহৃত হয়।কিন্তু বর্তমানে এটি সার্ভার সাইটে ব্যবহার করা যায় Node.js সাহায্যে । জাভাস্ক্রিপ্ট এইচটিএমএল  এবং DOM এর সাথে কাজ করতে  যথেষ্ট সক্ষম।  </p>
                    <h5>- Node.js:</h5>
                    <p> NodeJS হল একটি ক্রস-প্ল্যাটফর্ম এবং ওপেনসোর্স জাভাস্ক্রিপ্ট রানটাইম পরিবেশ যা সার্ভার-সাইডে জাভাস্ক্রিপ্ট চালানোর অনুমতি দেয়। Nodejs জাভাস্ক্রিপ্ট কোড ব্রাউজারের বাইরে চালানোর অনুমতি দেয়। Nodejs অনেক মডিউল নিয়ে আসে এবং বেশিরভাগই ওয়েব ডেভেলপমেন্টে ব্যবহৃত হয়। আমরা NodeJS এর সাহায্যে ব্রাউজারের বাইরে Javascript চালাতে পারি। এটি বেশিরভাগই সার্ভার-সাইডে ব্যবহৃত হয়। Nodejs is used in server-side development.</p>
                    </Col>
                </Row>
                <Row>
                    <Col>
                    <h4>1. when should you use node.js and when should you use mongodb</h4>
                    <h5>- When should we use Nodejs?</h5>
                    <p>যেকোনো প্রকল্পের একটি প্রোগ্রামিং পরিবেশ এবং একটি রানটাইম লাইব্রেরি প্রয়োজন যা আপনাকে মৌলিক প্রোগ্রামিং টুল/সমর্থন প্রদান করে এবং আপনার কোড কম্পাইল এবং/অথবা ব্যাখ্যা করতে পারে। Nodejs হল জাভাস্ক্রিপ্ট প্রোগ্রামিং ভাষার টুল। পাইথন, জাভা, পিএইচপি, সি#, সি++, গো, ইত্যাদির মতো অন্যান্য ভাষার জন্য অন্যান্য অনুরূপ সরঞ্জাম রয়েছে... । সুতরাং, আপনি যদি জাভাস্ক্রিপ্টে কোনো ধরনের স্ট্যান্ড-অ্যালোন প্রোগ্রাম বা সার্ভার লিখতে চান, তাহলে আপনি এর জন্য নোডজ ব্যবহার করতে পারেন।</p>
                    <h5>- When should we use MongoDB?</h5>
                    <p>যদি আপনার অ্যাপ্লিকেশানের ক্রমাগতভাবে ডেটা সঞ্চয় করার ক্ষমতার প্রয়োজন হয় যাতে আপনি দক্ষতার সাথে অনুসন্ধান করতে পারেন বা পরে এটি আপডেট করতে পারেন, তাহলে আপনি সাধারণত কিছু ধরণের ডাটাবেস ব্যবহার করবেন। কয়েক ডজন জনপ্রিয় ডাটাবেস রয়েছে। MongoDB এরকম একটি ডাটাবেস। MariaDB, MySql, CouchDB, DynamoDB (AWS-এ), Postgres হল অন্যান্য ডাটাবেসের উদাহরণ। বিভিন্ন ডাটাবেসের বিভিন্ন শক্তি (যে জিনিসগুলি তারা সেরা) এবং সেগুলি ব্যবহার করার বিভিন্ন উপায় রয়েছে তাই আপনি যা করছেন তার জন্য সঠিক/সেরা ডাটাবেস চয়ন করা সম্পূর্ণ ভিন্ন প্রশ্ন।</p>
                    </Col>
                </Row>
                <Row>
                    <Col>
                    <h4>3. Difference to between SQL and noSQL</h4>
                    <h5>- SQL</h5>
                    <p>SQL রিলেশনাল ডাটাবেস ম্যানেজমেন্ট সিস্টেম (RDBMS)। এই ডাটাবেসের স্থির বা স্থির বা পূর্বনির্ধারিত স্কিমা আছে । এই ডাটাবেস শ্রেণীবদ্ধ ডেটা সঞ্চয়ের জন্য উপযুক্ত নয়। এই ডাটাবেসগুলি জটিল প্রশ্নের জন্য সবচেয়ে উপযুক্ত । এটি Vertically Scalable.</p>
                    <h5>- noSQL</h5>
                    <p>NoSQL নন-রিলেশনাল বা ডিস্ট্রিবিউটেড ডাটাবেস সিস্টেম এবং dynamic schema। এই ডাটাবেসগুলি শ্রেণীবদ্ধ ডেটা সঞ্চয়ের জন্য সবচেয়ে উপযুক্ত। এটি  Horizontally scalable.</p>

                    </Col>
                </Row>
                </Container>
        </div>
    );
};

export default Blog;